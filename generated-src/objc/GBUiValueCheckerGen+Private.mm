// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ui.djinni

#import "GBUiValueCheckerGen+Private.h"
#import "GBUiValueCheckerGen.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "GBArgbColor+Private.h"
#import "GBUiValueCheckerGen+Private.h"
#import "GBViewFrame+Private.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface GBUiValueCheckerGen ()

- (id)initWithCpp:(const std::shared_ptr<::gearsbox::UiValueCheckerGen>&)cppRef;

@end

@implementation GBUiValueCheckerGen {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::gearsbox::UiValueCheckerGen>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::gearsbox::UiValueCheckerGen>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable GBUiValueCheckerGen *)instance {
    try {
        auto r = ::gearsbox::UiValueCheckerGen::instance();
        return ::djinni_generated::UiValueCheckerGen::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isValidColor:(nonnull GBArgbColor *)value {
    try {
        auto r = _cppRefHandle.get()->isValidColor(::djinni_generated::ArgbColor::toCpp(value));
        return ::djinni::Bool::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isValidFrame:(nonnull GBViewFrame *)value {
    try {
        auto r = _cppRefHandle.get()->isValidFrame(::djinni_generated::ViewFrame::toCpp(value));
        return ::djinni::Bool::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isValidTextBoarder:(GBTextBoarder)value {
    try {
        auto r = _cppRefHandle.get()->isValidTextBoarder(::djinni::Enum<::gearsbox::TextBoarder, GBTextBoarder>::toCpp(value));
        return ::djinni::Bool::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isValidTextAlign:(GBTextAlign)value {
    try {
        auto r = _cppRefHandle.get()->isValidTextAlign(::djinni::Enum<::gearsbox::TextAlign, GBTextAlign>::toCpp(value));
        return ::djinni::Bool::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto UiValueCheckerGen::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto UiValueCheckerGen::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<GBUiValueCheckerGen>(cpp);
}

}  // namespace djinni_generated

@end
