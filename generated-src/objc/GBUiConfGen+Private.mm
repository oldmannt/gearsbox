// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ui.djinni

#import "GBUiConfGen+Private.h"
#import "GBUiConfGen.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "GBUiConfGen+Private.h"
#import "GBViewConf+Private.h"
#import "GBViewConstraint+Private.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface GBUiConfGen ()

- (id)initWithCpp:(const std::shared_ptr<::gearsbox::UiConfGen>&)cppRef;

@end

@implementation GBUiConfGen {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::gearsbox::UiConfGen>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::gearsbox::UiConfGen>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable GBUiConfGen *)instance {
    try {
        auto r = ::gearsbox::UiConfGen::instance();
        return ::djinni_generated::UiConfGen::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)initialize:(nonnull NSString *)cfg {
    try {
        auto r = _cppRefHandle.get()->initialize(::djinni::String::toCpp(cfg));
        return ::djinni::Bool::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)load:(nonnull NSString *)cfg {
    try {
        auto r = _cppRefHandle.get()->load(::djinni::String::toCpp(cfg));
        return ::djinni::Bool::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSArray<GBViewConstraint *> *)getConstraints:(nonnull NSString *)name {
    try {
        auto r = _cppRefHandle.get()->getConstraints(::djinni::String::toCpp(name));
        return ::djinni::List<::djinni_generated::ViewConstraint>::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull GBViewConf *)getViewConf:(nonnull NSString *)nmae {
    try {
        auto r = _cppRefHandle.get()->getViewConf(::djinni::String::toCpp(nmae));
        return ::djinni_generated::ViewConf::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto UiConfGen::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto UiConfGen::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<GBUiConfGen>(cpp);
}

}  // namespace djinni_generated

@end
