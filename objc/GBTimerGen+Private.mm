// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from gearsbox.djinni

#import "GBTimerGen+Private.h"
#import "GBTimerGen.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "GBTimerGen+Private.h"
#import "GBTimerHandlerGen+Private.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface GBTimerGen ()

- (id)initWithCpp:(const std::shared_ptr<::gearsbox::TimerGen>&)cppRef;

@end

@implementation GBTimerGen {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::gearsbox::TimerGen>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::gearsbox::TimerGen>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable GBTimerGen *)create:(int64_t)timeout
                    repeatTimes:(int32_t)repeatTimes
                         hander:(nullable id<GBTimerHandlerGen>)hander {
    try {
        auto r = ::gearsbox::TimerGen::create(::djinni::I64::toCpp(timeout),
                                              ::djinni::I32::toCpp(repeatTimes),
                                              ::djinni_generated::TimerHandlerGen::toCpp(hander));
        return ::djinni_generated::TimerGen::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)start {
    try {
        auto r = _cppRefHandle.get()->start();
        return ::djinni::Bool::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)stop {
    try {
        _cppRefHandle.get()->stop();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (int32_t)getRepeated {
    try {
        auto r = _cppRefHandle.get()->getRepeated();
        return ::djinni::I32::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (int64_t)getTimePassed {
    try {
        auto r = _cppRefHandle.get()->getTimePassed();
        return ::djinni::I64::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isRunning {
    try {
        auto r = _cppRefHandle.get()->isRunning();
        return ::djinni::Bool::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto TimerGen::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto TimerGen::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<GBTimerGen>(cpp);
}

}  // namespace djinni_generated

@end
