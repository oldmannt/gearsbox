// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ui.djinni

#include "NativeUiInjecterGen.hpp"  // my header
#include "Marshal.hpp"
#include "NativeUiInjecterGen.hpp"
#include "NativeViewGroupGen.hpp"

namespace djinni_generated {

NativeUiInjecterGen::NativeUiInjecterGen() : ::djinni::JniInterface<::gearsbox::UiInjecterGen, NativeUiInjecterGen>("dyno/fun/gearsbox/UiInjecterGen$CppProxy") {}

NativeUiInjecterGen::~NativeUiInjecterGen() = default;


CJNIEXPORT void JNICALL Java_dyno_fun_gearsbox_UiInjecterGen_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::gearsbox::UiInjecterGen>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_dyno_fun_gearsbox_UiInjecterGen_instance(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::gearsbox::UiInjecterGen::instance();
        return ::djinni::release(::djinni_generated::NativeUiInjecterGen::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_dyno_fun_gearsbox_UiInjecterGen_00024CppProxy_native_1inject(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_id, jobject j_viewGroup)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::UiInjecterGen>(nativeRef);
        ref->inject(::djinni::String::toCpp(jniEnv, j_id),
                    ::djinni_generated::NativeViewGroupGen::toCpp(jniEnv, j_viewGroup));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_dyno_fun_gearsbox_UiInjecterGen_00024CppProxy_native_1removeViewGroup(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_id)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::UiInjecterGen>(nativeRef);
        ref->removeViewGroup(::djinni::String::toCpp(jniEnv, j_id));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_dyno_fun_gearsbox_UiInjecterGen_00024CppProxy_native_1getViewGroup(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_id)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::UiInjecterGen>(nativeRef);
        auto r = ref->getViewGroup(::djinni::String::toCpp(jniEnv, j_id));
        return ::djinni::release(::djinni_generated::NativeViewGroupGen::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
