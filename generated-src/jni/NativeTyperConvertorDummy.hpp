// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ui.djinni

#pragma once

#include "djinni_support.hpp"
#include "typer_convertor_dummy.hpp"

namespace djinni_generated {

class NativeTyperConvertorDummy final : ::djinni::JniInterface<::gearsbox::TyperConvertorDummy, NativeTyperConvertorDummy> {
public:
    using CppType = std::shared_ptr<::gearsbox::TyperConvertorDummy>;
    using CppOptType = std::shared_ptr<::gearsbox::TyperConvertorDummy>;
    using JniType = jobject;

    using Boxed = NativeTyperConvertorDummy;

    ~NativeTyperConvertorDummy();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeTyperConvertorDummy>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeTyperConvertorDummy>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeTyperConvertorDummy();
    friend ::djinni::JniClass<NativeTyperConvertorDummy>;
    friend ::djinni::JniInterface<::gearsbox::TyperConvertorDummy, NativeTyperConvertorDummy>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::gearsbox::TyperConvertorDummy
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void convertUIColor(const ::gearsbox::ArgbColor & color) override;
        void convertUIRect(const ::gearsbox::ViewFrame & rect) override;
        void convertUIConstraintType(::gearsbox::ConstraintType type) override;
        void convertUITextBoarder(::gearsbox::TextBoarder type) override;
        void convertUITextAlign(::gearsbox::TextAlign type) override;
        void convertKeyboardType(::gearsbox::TextKeyboard type) override;

    private:
        friend ::djinni::JniInterface<::gearsbox::TyperConvertorDummy, ::djinni_generated::NativeTyperConvertorDummy>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("dyno/fun/gearsbox/TyperConvertorDummy") };
    const jmethodID method_convertUIColor { ::djinni::jniGetMethodID(clazz.get(), "convertUIColor", "(Ldyno/fun/gearsbox/ArgbColor;)V") };
    const jmethodID method_convertUIRect { ::djinni::jniGetMethodID(clazz.get(), "convertUIRect", "(Ldyno/fun/gearsbox/ViewFrame;)V") };
    const jmethodID method_convertUIConstraintType { ::djinni::jniGetMethodID(clazz.get(), "convertUIConstraintType", "(Ldyno/fun/gearsbox/ConstraintType;)V") };
    const jmethodID method_convertUITextBoarder { ::djinni::jniGetMethodID(clazz.get(), "convertUITextBoarder", "(Ldyno/fun/gearsbox/TextBoarder;)V") };
    const jmethodID method_convertUITextAlign { ::djinni::jniGetMethodID(clazz.get(), "convertUITextAlign", "(Ldyno/fun/gearsbox/TextAlign;)V") };
    const jmethodID method_convertKeyboardType { ::djinni::jniGetMethodID(clazz.get(), "convertKeyboardType", "(Ldyno/fun/gearsbox/TextKeyboard;)V") };
};

}  // namespace djinni_generated
