// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ui.djinni

#include "NativeUiValueCheckerGen.hpp"  // my header
#include "Marshal.hpp"
#include "NativeArgbColor.hpp"
#include "NativeTextAlign.hpp"
#include "NativeTextBoarder.hpp"
#include "NativeUiValueCheckerGen.hpp"
#include "NativeViewFrame.hpp"

namespace djinni_generated {

NativeUiValueCheckerGen::NativeUiValueCheckerGen() : ::djinni::JniInterface<::gearsbox::UiValueCheckerGen, NativeUiValueCheckerGen>("dyno/fun/gearsbox/UiValueCheckerGen$CppProxy") {}

NativeUiValueCheckerGen::~NativeUiValueCheckerGen() = default;


CJNIEXPORT void JNICALL Java_dyno_fun_gearsbox_UiValueCheckerGen_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::gearsbox::UiValueCheckerGen>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_dyno_fun_gearsbox_UiValueCheckerGen_instance(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::gearsbox::UiValueCheckerGen::instance();
        return ::djinni::release(::djinni_generated::NativeUiValueCheckerGen::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_dyno_fun_gearsbox_UiValueCheckerGen_00024CppProxy_native_1isValidColor(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::UiValueCheckerGen>(nativeRef);
        auto r = ref->isValidColor(::djinni_generated::NativeArgbColor::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_dyno_fun_gearsbox_UiValueCheckerGen_00024CppProxy_native_1isValidFrame(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::UiValueCheckerGen>(nativeRef);
        auto r = ref->isValidFrame(::djinni_generated::NativeViewFrame::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_dyno_fun_gearsbox_UiValueCheckerGen_00024CppProxy_native_1isValidTextBoarder(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::UiValueCheckerGen>(nativeRef);
        auto r = ref->isValidTextBoarder(::djinni_generated::NativeTextBoarder::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_dyno_fun_gearsbox_UiValueCheckerGen_00024CppProxy_native_1isValidTextAlign(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::UiValueCheckerGen>(nativeRef);
        auto r = ref->isValidTextAlign(::djinni_generated::NativeTextAlign::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
