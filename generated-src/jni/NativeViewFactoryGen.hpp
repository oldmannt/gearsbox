// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ui.djinni

#pragma once

#include "djinni_support.hpp"
#include "view_factory_gen.hpp"

namespace djinni_generated {

class NativeViewFactoryGen final : ::djinni::JniInterface<::gearsbox::ViewFactoryGen, NativeViewFactoryGen> {
public:
    using CppType = std::shared_ptr<::gearsbox::ViewFactoryGen>;
    using CppOptType = std::shared_ptr<::gearsbox::ViewFactoryGen>;
    using JniType = jobject;

    using Boxed = NativeViewFactoryGen;

    ~NativeViewFactoryGen();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeViewFactoryGen>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeViewFactoryGen>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeViewFactoryGen();
    friend ::djinni::JniClass<NativeViewFactoryGen>;
    friend ::djinni::JniInterface<::gearsbox::ViewFactoryGen, NativeViewFactoryGen>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::gearsbox::ViewFactoryGen
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        std::shared_ptr<::gearsbox::ViewGen> createView(const ::gearsbox::ViewConf & conf) override;
        std::shared_ptr<::gearsbox::ViewGen> createViewById(const std::string & id, ::gearsbox::ViewType type) override;
        bool injectView(const std::shared_ptr<::gearsbox::ViewGen> & view) override;
        void showViewController(const std::string & id, bool animated) override;

    private:
        friend ::djinni::JniInterface<::gearsbox::ViewFactoryGen, ::djinni_generated::NativeViewFactoryGen>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("dyno/fun/gearsbox/ViewFactoryGen") };
    const jmethodID method_createView { ::djinni::jniGetMethodID(clazz.get(), "createView", "(Ldyno/fun/gearsbox/ViewConf;)Ldyno/fun/gearsbox/ViewGen;") };
    const jmethodID method_createViewById { ::djinni::jniGetMethodID(clazz.get(), "createViewById", "(Ljava/lang/String;Ldyno/fun/gearsbox/ViewType;)Ldyno/fun/gearsbox/ViewGen;") };
    const jmethodID method_injectView { ::djinni::jniGetMethodID(clazz.get(), "injectView", "(Ldyno/fun/gearsbox/ViewGen;)Z") };
    const jmethodID method_showViewController { ::djinni::jniGetMethodID(clazz.get(), "showViewController", "(Ljava/lang/String;Z)V") };
};

}  // namespace djinni_generated
