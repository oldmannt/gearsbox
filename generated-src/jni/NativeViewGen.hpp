// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ui.djinni

#pragma once

#include "djinni_support.hpp"
#include "view_gen.hpp"

namespace djinni_generated {

class NativeViewGen final : ::djinni::JniInterface<::gearsbox::ViewGen, NativeViewGen> {
public:
    using CppType = std::shared_ptr<::gearsbox::ViewGen>;
    using CppOptType = std::shared_ptr<::gearsbox::ViewGen>;
    using JniType = jobject;

    using Boxed = NativeViewGen;

    ~NativeViewGen();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeViewGen>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeViewGen>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeViewGen();
    friend ::djinni::JniClass<NativeViewGen>;
    friend ::djinni::JniInterface<::gearsbox::ViewGen, NativeViewGen>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::gearsbox::ViewGen
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void setFrame(const ::gearsbox::ViewFrame & frame) override;
        ::gearsbox::ViewFrame getFrame() override;
        void setVisiable(bool v) override;
        bool addSubView(const std::shared_ptr<::gearsbox::ViewGen> & view) override;
        void addConstraint(const ::gearsbox::ViewConstraint & constraint) override;

    private:
        friend ::djinni::JniInterface<::gearsbox::ViewGen, ::djinni_generated::NativeViewGen>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("dyno/fun/gearsbox/ViewGen") };
    const jmethodID method_setFrame { ::djinni::jniGetMethodID(clazz.get(), "setFrame", "(Ldyno/fun/gearsbox/ViewFrame;)V") };
    const jmethodID method_getFrame { ::djinni::jniGetMethodID(clazz.get(), "getFrame", "()Ldyno/fun/gearsbox/ViewFrame;") };
    const jmethodID method_setVisiable { ::djinni::jniGetMethodID(clazz.get(), "setVisiable", "(Z)V") };
    const jmethodID method_addSubView { ::djinni::jniGetMethodID(clazz.get(), "addSubView", "(Ldyno/fun/gearsbox/ViewGen;)Z") };
    const jmethodID method_addConstraint { ::djinni::jniGetMethodID(clazz.get(), "addConstraint", "(Ldyno/fun/gearsbox/ViewConstraint;)V") };
};

}  // namespace djinni_generated
