// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ui.djinni

package dyno.fun.gearsbox;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class UiValueCheckerGen {
    public abstract boolean isValidColor(ArgbColor value);

    public abstract boolean isValidFrame(ViewFrame value);

    public abstract boolean isValidTextBoarder(TextBoarder value);

    public abstract boolean isValidTextAlign(TextAlign value);

    public static native UiValueCheckerGen instance();

    private static final class CppProxy extends UiValueCheckerGen
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public boolean isValidColor(ArgbColor value)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_isValidColor(this.nativeRef, value);
        }
        private native boolean native_isValidColor(long _nativeRef, ArgbColor value);

        @Override
        public boolean isValidFrame(ViewFrame value)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_isValidFrame(this.nativeRef, value);
        }
        private native boolean native_isValidFrame(long _nativeRef, ViewFrame value);

        @Override
        public boolean isValidTextBoarder(TextBoarder value)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_isValidTextBoarder(this.nativeRef, value);
        }
        private native boolean native_isValidTextBoarder(long _nativeRef, TextBoarder value);

        @Override
        public boolean isValidTextAlign(TextAlign value)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_isValidTextAlign(this.nativeRef, value);
        }
        private native boolean native_isValidTextAlign(long _nativeRef, TextAlign value);
    }
}
