// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from gearsbox.djinni

#pragma once

#include "djinni_support.hpp"
#include "file_info_gen.hpp"

namespace djinni_generated {

class NativeFileInfoGen final : ::djinni::JniInterface<::gearsbox::FileInfoGen, NativeFileInfoGen> {
public:
    using CppType = std::shared_ptr<::gearsbox::FileInfoGen>;
    using CppOptType = std::shared_ptr<::gearsbox::FileInfoGen>;
    using JniType = jobject;

    using Boxed = NativeFileInfoGen;

    ~NativeFileInfoGen();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeFileInfoGen>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeFileInfoGen>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeFileInfoGen();
    friend ::djinni::JniClass<NativeFileInfoGen>;
    friend ::djinni::JniInterface<::gearsbox::FileInfoGen, NativeFileInfoGen>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::gearsbox::FileInfoGen
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        bool initialize(const std::string & path) override;
        int64_t getSize() override;
        std::chrono::system_clock::time_point getCreateDate() override;
        std::string getName() override;
        std::string getSuffix() override;
        std::string getPrefix() override;
        std::string getPath() override;

    private:
        friend ::djinni::JniInterface<::gearsbox::FileInfoGen, ::djinni_generated::NativeFileInfoGen>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("dyno/fun/gearsbox/FileInfoGen") };
    const jmethodID method_initialize { ::djinni::jniGetMethodID(clazz.get(), "initialize", "(Ljava/lang/String;)Z") };
    const jmethodID method_getSize { ::djinni::jniGetMethodID(clazz.get(), "getSize", "()J") };
    const jmethodID method_getCreateDate { ::djinni::jniGetMethodID(clazz.get(), "getCreateDate", "()Ljava/util/Date;") };
    const jmethodID method_getName { ::djinni::jniGetMethodID(clazz.get(), "getName", "()Ljava/lang/String;") };
    const jmethodID method_getSuffix { ::djinni::jniGetMethodID(clazz.get(), "getSuffix", "()Ljava/lang/String;") };
    const jmethodID method_getPrefix { ::djinni::jniGetMethodID(clazz.get(), "getPrefix", "()Ljava/lang/String;") };
    const jmethodID method_getPath { ::djinni::jniGetMethodID(clazz.get(), "getPath", "()Ljava/lang/String;") };
};

}  // namespace djinni_generated
