// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ui.djinni

#include "NativeUiConfGen.hpp"  // my header
#include "Marshal.hpp"
#include "NativeUiConfGen.hpp"
#include "NativeViewConf.hpp"
#include "NativeViewConstraint.hpp"

namespace djinni_generated {

NativeUiConfGen::NativeUiConfGen() : ::djinni::JniInterface<::gearsbox::UiConfGen, NativeUiConfGen>("dyno/fun/gearsbox/UiConfGen$CppProxy") {}

NativeUiConfGen::~NativeUiConfGen() = default;


CJNIEXPORT void JNICALL Java_dyno_fun_gearsbox_UiConfGen_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::gearsbox::UiConfGen>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_dyno_fun_gearsbox_UiConfGen_instance(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::gearsbox::UiConfGen::instance();
        return ::djinni::release(::djinni_generated::NativeUiConfGen::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_dyno_fun_gearsbox_UiConfGen_00024CppProxy_native_1initialize(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_cfg)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::UiConfGen>(nativeRef);
        auto r = ref->initialize(::djinni::String::toCpp(jniEnv, j_cfg));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_dyno_fun_gearsbox_UiConfGen_00024CppProxy_native_1load(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_cfg)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::UiConfGen>(nativeRef);
        auto r = ref->load(::djinni::String::toCpp(jniEnv, j_cfg));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_dyno_fun_gearsbox_UiConfGen_00024CppProxy_native_1getConstraints(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_name)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::UiConfGen>(nativeRef);
        auto r = ref->getConstraints(::djinni::String::toCpp(jniEnv, j_name));
        return ::djinni::release(::djinni::List<::djinni_generated::NativeViewConstraint>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_dyno_fun_gearsbox_UiConfGen_00024CppProxy_native_1getViewConf(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_nmae)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::UiConfGen>(nativeRef);
        auto r = ref->getViewConf(::djinni::String::toCpp(jniEnv, j_nmae));
        return ::djinni::release(::djinni_generated::NativeViewConf::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
