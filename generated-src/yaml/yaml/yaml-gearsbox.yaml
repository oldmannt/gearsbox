# AUTOGENERATED FILE - DO NOT MODIFY!
# This file generated by Djinni from gearsbox.djinni
---
name: gb_async_loop_gen
typedef: 'interface +c'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::AsyncLoopGen'
  header: '"async_loop_gen.hpp"'
  byValue: false
objc:
  typename: 'GBAsyncLoopGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBAsyncLoopGen'
  header: '"GBAsyncLoopGen.h"'
objcpp:
  translator: '::djinni_generated::AsyncLoopGen'
  header: '"GBAsyncLoopGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.AsyncLoopGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.AsyncLoopGen'
jni:
  translator: '::djinni_generated::NativeAsyncLoopGen'
  header: '"NativeAsyncLoopGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/AsyncLoopGen;'
---
name: gb_callback_http_gen
typedef: 'interface +o +j'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::CallbackHttpGen'
  header: '"callback_http_gen.hpp"'
  byValue: false
objc:
  typename: 'GBCallbackHttpGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBCallbackHttpGen'
  header: '"GBCallbackHttpGen.h"'
objcpp:
  translator: '::djinni_generated::CallbackHttpGen'
  header: '"GBCallbackHttpGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.CallbackHttpGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.CallbackHttpGen'
jni:
  translator: '::djinni_generated::NativeCallbackHttpGen'
  header: '"NativeCallbackHttpGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/CallbackHttpGen;'
---
name: gb_http_request_gen
typedef: 'interface +c'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::HttpRequestGen'
  header: '"http_request_gen.hpp"'
  byValue: false
objc:
  typename: 'GBHttpRequestGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBHttpRequestGen'
  header: '"GBHttpRequestGen.h"'
objcpp:
  translator: '::djinni_generated::HttpRequestGen'
  header: '"GBHttpRequestGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.HttpRequestGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.HttpRequestGen'
jni:
  translator: '::djinni_generated::NativeHttpRequestGen'
  header: '"NativeHttpRequestGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/HttpRequestGen;'
---
name: gb_log_gen
typedef: 'interface +c'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::LogGen'
  header: '"log_gen.hpp"'
  byValue: false
objc:
  typename: 'GBLogGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBLogGen'
  header: '"GBLogGen.h"'
objcpp:
  translator: '::djinni_generated::LogGen'
  header: '"GBLogGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.LogGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.LogGen'
jni:
  translator: '::djinni_generated::NativeLogGen'
  header: '"NativeLogGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/LogGen;'
