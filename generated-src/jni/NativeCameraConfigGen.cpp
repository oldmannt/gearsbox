// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from camera.djinni

#include "NativeCameraConfigGen.hpp"  // my header
#include "Marshal.hpp"
#include "NativeCameraConfigGen.hpp"
#include "NativeCameraFlash.hpp"
#include "NativeCameraQuality.hpp"
#include "NativeConfigGen.hpp"

namespace djinni_generated {

NativeCameraConfigGen::NativeCameraConfigGen() : ::djinni::JniInterface<::gearsbox::CameraConfigGen, NativeCameraConfigGen>("dyno/fun/gearsbox/CameraConfigGen$CppProxy") {}

NativeCameraConfigGen::~NativeCameraConfigGen() = default;


CJNIEXPORT void JNICALL Java_dyno_fun_gearsbox_CameraConfigGen_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::gearsbox::CameraConfigGen>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_dyno_fun_gearsbox_CameraConfigGen_instance(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::gearsbox::CameraConfigGen::instance();
        return ::djinni::release(::djinni_generated::NativeCameraConfigGen::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_dyno_fun_gearsbox_CameraConfigGen_00024CppProxy_native_1initialize(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_cfg)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::CameraConfigGen>(nativeRef);
        auto r = ref->initialize(::djinni_generated::NativeConfigGen::toCpp(jniEnv, j_cfg));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_dyno_fun_gearsbox_CameraConfigGen_00024CppProxy_native_1getFlashMode(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::CameraConfigGen>(nativeRef);
        auto r = ref->getFlashMode();
        return ::djinni::release(::djinni_generated::NativeCameraFlash::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_dyno_fun_gearsbox_CameraConfigGen_00024CppProxy_native_1getQuatityLevel(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::CameraConfigGen>(nativeRef);
        auto r = ref->getQuatityLevel();
        return ::djinni::release(::djinni_generated::NativeCameraQuality::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_dyno_fun_gearsbox_CameraConfigGen_00024CppProxy_native_1setFlashMode(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_mode)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::CameraConfigGen>(nativeRef);
        ref->setFlashMode(::djinni_generated::NativeCameraFlash::toCpp(jniEnv, j_mode));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_dyno_fun_gearsbox_CameraConfigGen_00024CppProxy_native_1setQuatityLevel(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_quality)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::CameraConfigGen>(nativeRef);
        ref->setQuatityLevel(::djinni_generated::NativeCameraQuality::toCpp(jniEnv, j_quality));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
