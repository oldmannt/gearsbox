// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ui.djinni

#pragma once

#include "djinni_support.hpp"
#include "view_constraint.hpp"

namespace djinni_generated {

class NativeViewConstraint final {
public:
    using CppType = ::gearsbox::ViewConstraint;
    using JniType = jobject;

    using Boxed = NativeViewConstraint;

    ~NativeViewConstraint();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeViewConstraint();
    friend ::djinni::JniClass<NativeViewConstraint>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("dyno/fun/gearsbox/ViewConstraint") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ldyno/fun/gearsbox/ConstraintType;Ldyno/fun/gearsbox/ConstraintType;Ljava/lang/String;Ljava/lang/String;FF)V") };
    const jfieldID field_mType { ::djinni::jniGetFieldID(clazz.get(), "mType", "Ldyno/fun/gearsbox/ConstraintType;") };
    const jfieldID field_mTypeTo { ::djinni::jniGetFieldID(clazz.get(), "mTypeTo", "Ldyno/fun/gearsbox/ConstraintType;") };
    const jfieldID field_mViewFrom { ::djinni::jniGetFieldID(clazz.get(), "mViewFrom", "Ljava/lang/String;") };
    const jfieldID field_mViewTo { ::djinni::jniGetFieldID(clazz.get(), "mViewTo", "Ljava/lang/String;") };
    const jfieldID field_mMultiplier { ::djinni::jniGetFieldID(clazz.get(), "mMultiplier", "F") };
    const jfieldID field_mOffset { ::djinni::jniGetFieldID(clazz.get(), "mOffset", "F") };
};

}  // namespace djinni_generated
