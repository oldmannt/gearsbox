// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from gearsbox.djinni

#include "NativePlatformUtilityGen.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativePlatformUtilityGen::NativePlatformUtilityGen() : ::djinni::JniInterface<::gearsbox::PlatformUtilityGen, NativePlatformUtilityGen>() {}

NativePlatformUtilityGen::~NativePlatformUtilityGen() = default;

NativePlatformUtilityGen::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativePlatformUtilityGen::JavaProxy::~JavaProxy() = default;

void NativePlatformUtilityGen::JavaProxy::endEniting(bool c_force) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePlatformUtilityGen>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_endEniting,
                           ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c_force)));
    ::djinni::jniExceptionCheck(jniEnv);
}
std::string NativePlatformUtilityGen::JavaProxy::getHomeDirectory() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePlatformUtilityGen>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_getHomeDirectory);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}
std::string NativePlatformUtilityGen::JavaProxy::getPackFilePath(const std::string & c_file) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePlatformUtilityGen>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_getPackFilePath,
                                                  ::djinni::get(::djinni::String::fromCpp(jniEnv, c_file)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}
std::string NativePlatformUtilityGen::JavaProxy::getPackFileBuffer(const std::string & c_file) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePlatformUtilityGen>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_getPackFileBuffer,
                                                  ::djinni::get(::djinni::String::fromCpp(jniEnv, c_file)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}
std::string NativePlatformUtilityGen::JavaProxy::getPackFileToHomePath(const std::string & c_file) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePlatformUtilityGen>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_getPackFileToHomePath,
                                                  ::djinni::get(::djinni::String::fromCpp(jniEnv, c_file)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}

}  // namespace djinni_generated
