// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from camera.djinni

#pragma once

#include "camera_controller_gen.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeCameraControllerGen final : ::djinni::JniInterface<::gearsbox::CameraControllerGen, NativeCameraControllerGen> {
public:
    using CppType = std::shared_ptr<::gearsbox::CameraControllerGen>;
    using CppOptType = std::shared_ptr<::gearsbox::CameraControllerGen>;
    using JniType = jobject;

    using Boxed = NativeCameraControllerGen;

    ~NativeCameraControllerGen();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeCameraControllerGen>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeCameraControllerGen>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeCameraControllerGen();
    friend ::djinni::JniClass<NativeCameraControllerGen>;
    friend ::djinni::JniInterface<::gearsbox::CameraControllerGen, NativeCameraControllerGen>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::gearsbox::CameraControllerGen
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void initialize(bool audio) override;
        void setAudioEnable(bool enable) override;
        void startCamera() override;
        void stopCamera() override;
        void switchFront(bool front) override;
        bool isFront() override;
        void setFlashMode(::gearsbox::CameraFlash mode) override;
        ::gearsbox::CameraFlash getFlashMode() override;
        void setQuality(::gearsbox::CameraQuality quality) override;
        ::gearsbox::CameraQuality getQuality() override;
        void setSloMo(bool flag) override;
        bool getSloMo() override;
        int32_t getMaxFrameRate() override;
        int32_t getDefaultFrameRate() override;
        void setFrameDurationMin(const ::gearsbox::Duration & min) override;
        void setFrameDurationMax(const ::gearsbox::Duration & max) override;
        ::gearsbox::Duration getFrameDuration() override;
        void setExposureMode(::gearsbox::CameraExposureMode mode) override;
        ::gearsbox::CameraExposureMode getExposureMode() override;
        void setExposurePoint(float x, float y) override;
        void setExposureEv(float ev) override;
        float getExposureEv() override;
        float getExposureMaxEv() override;
        float getExposureMinEv() override;
        void setExposureDuration(float seconds) override;
        float getExposureDuration() override;
        float getExposureMinDuration() override;
        float getExposureMaxDuration() override;
        void setISO(int32_t iso) override;
        int32_t getISO() override;
        int32_t getISOMax() override;
        int32_t getISOMin() override;
        float getEV() override;
        void setEV(float ev) override;
        float getEVMax() override;
        float getEVMin() override;
        void setFocusMode(::gearsbox::CameraFocusMode mode) override;
        ::gearsbox::CameraFocusMode getFocusMode() override;
        void setFocusLens(float lens) override;
        float getFocusLens() override;
        float getFocusMax() override;
        float getFocusMin() override;
        void setFocusPoint(float x, float y) override;
        void setFocusAutoRange(::gearsbox::CameraFocusRange range) override;
        ::gearsbox::CameraFocusRange getFocusAutoRange() override;
        void setZoom(float zoom) override;
        float getZoom() override;
        float getZoomMax() override;
        float getZoomMin() override;
        void asnyOneFrame() override;
        void asnyOnePicture() override;
        void setCaptureHandler(const std::shared_ptr<::gearsbox::CameraCaptureHandler> & handler) override;
        void setCaptureMode(::gearsbox::CameraCaptureMode mode) override;
        ::gearsbox::CameraCaptureMode getCaptureMode() override;
        void setImmediaPause(bool flag) override;
        std::string getDebugInfo() override;

    private:
        friend ::djinni::JniInterface<::gearsbox::CameraControllerGen, ::djinni_generated::NativeCameraControllerGen>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("dyno/fun/gearsbox/CameraControllerGen") };
    const jmethodID method_initialize { ::djinni::jniGetMethodID(clazz.get(), "initialize", "(Z)V") };
    const jmethodID method_setAudioEnable { ::djinni::jniGetMethodID(clazz.get(), "setAudioEnable", "(Z)V") };
    const jmethodID method_startCamera { ::djinni::jniGetMethodID(clazz.get(), "startCamera", "()V") };
    const jmethodID method_stopCamera { ::djinni::jniGetMethodID(clazz.get(), "stopCamera", "()V") };
    const jmethodID method_switchFront { ::djinni::jniGetMethodID(clazz.get(), "switchFront", "(Z)V") };
    const jmethodID method_isFront { ::djinni::jniGetMethodID(clazz.get(), "isFront", "()Z") };
    const jmethodID method_setFlashMode { ::djinni::jniGetMethodID(clazz.get(), "setFlashMode", "(Ldyno/fun/gearsbox/CameraFlash;)V") };
    const jmethodID method_getFlashMode { ::djinni::jniGetMethodID(clazz.get(), "getFlashMode", "()Ldyno/fun/gearsbox/CameraFlash;") };
    const jmethodID method_setQuality { ::djinni::jniGetMethodID(clazz.get(), "setQuality", "(Ldyno/fun/gearsbox/CameraQuality;)V") };
    const jmethodID method_getQuality { ::djinni::jniGetMethodID(clazz.get(), "getQuality", "()Ldyno/fun/gearsbox/CameraQuality;") };
    const jmethodID method_setSloMo { ::djinni::jniGetMethodID(clazz.get(), "setSloMo", "(Z)V") };
    const jmethodID method_getSloMo { ::djinni::jniGetMethodID(clazz.get(), "getSloMo", "()Z") };
    const jmethodID method_getMaxFrameRate { ::djinni::jniGetMethodID(clazz.get(), "getMaxFrameRate", "()I") };
    const jmethodID method_getDefaultFrameRate { ::djinni::jniGetMethodID(clazz.get(), "getDefaultFrameRate", "()I") };
    const jmethodID method_setFrameDurationMin { ::djinni::jniGetMethodID(clazz.get(), "setFrameDurationMin", "(Ldyno/fun/gearsbox/Duration;)V") };
    const jmethodID method_setFrameDurationMax { ::djinni::jniGetMethodID(clazz.get(), "setFrameDurationMax", "(Ldyno/fun/gearsbox/Duration;)V") };
    const jmethodID method_getFrameDuration { ::djinni::jniGetMethodID(clazz.get(), "getFrameDuration", "()Ldyno/fun/gearsbox/Duration;") };
    const jmethodID method_setExposureMode { ::djinni::jniGetMethodID(clazz.get(), "setExposureMode", "(Ldyno/fun/gearsbox/CameraExposureMode;)V") };
    const jmethodID method_getExposureMode { ::djinni::jniGetMethodID(clazz.get(), "getExposureMode", "()Ldyno/fun/gearsbox/CameraExposureMode;") };
    const jmethodID method_setExposurePoint { ::djinni::jniGetMethodID(clazz.get(), "setExposurePoint", "(FF)V") };
    const jmethodID method_setExposureEv { ::djinni::jniGetMethodID(clazz.get(), "setExposureEv", "(F)V") };
    const jmethodID method_getExposureEv { ::djinni::jniGetMethodID(clazz.get(), "getExposureEv", "()F") };
    const jmethodID method_getExposureMaxEv { ::djinni::jniGetMethodID(clazz.get(), "getExposureMaxEv", "()F") };
    const jmethodID method_getExposureMinEv { ::djinni::jniGetMethodID(clazz.get(), "getExposureMinEv", "()F") };
    const jmethodID method_setExposureDuration { ::djinni::jniGetMethodID(clazz.get(), "setExposureDuration", "(F)V") };
    const jmethodID method_getExposureDuration { ::djinni::jniGetMethodID(clazz.get(), "getExposureDuration", "()F") };
    const jmethodID method_getExposureMinDuration { ::djinni::jniGetMethodID(clazz.get(), "getExposureMinDuration", "()F") };
    const jmethodID method_getExposureMaxDuration { ::djinni::jniGetMethodID(clazz.get(), "getExposureMaxDuration", "()F") };
    const jmethodID method_setISO { ::djinni::jniGetMethodID(clazz.get(), "setISO", "(I)V") };
    const jmethodID method_getISO { ::djinni::jniGetMethodID(clazz.get(), "getISO", "()I") };
    const jmethodID method_getISOMax { ::djinni::jniGetMethodID(clazz.get(), "getISOMax", "()I") };
    const jmethodID method_getISOMin { ::djinni::jniGetMethodID(clazz.get(), "getISOMin", "()I") };
    const jmethodID method_getEV { ::djinni::jniGetMethodID(clazz.get(), "getEV", "()F") };
    const jmethodID method_setEV { ::djinni::jniGetMethodID(clazz.get(), "setEV", "(F)V") };
    const jmethodID method_getEVMax { ::djinni::jniGetMethodID(clazz.get(), "getEVMax", "()F") };
    const jmethodID method_getEVMin { ::djinni::jniGetMethodID(clazz.get(), "getEVMin", "()F") };
    const jmethodID method_setFocusMode { ::djinni::jniGetMethodID(clazz.get(), "setFocusMode", "(Ldyno/fun/gearsbox/CameraFocusMode;)V") };
    const jmethodID method_getFocusMode { ::djinni::jniGetMethodID(clazz.get(), "getFocusMode", "()Ldyno/fun/gearsbox/CameraFocusMode;") };
    const jmethodID method_setFocusLens { ::djinni::jniGetMethodID(clazz.get(), "setFocusLens", "(F)V") };
    const jmethodID method_getFocusLens { ::djinni::jniGetMethodID(clazz.get(), "getFocusLens", "()F") };
    const jmethodID method_getFocusMax { ::djinni::jniGetMethodID(clazz.get(), "getFocusMax", "()F") };
    const jmethodID method_getFocusMin { ::djinni::jniGetMethodID(clazz.get(), "getFocusMin", "()F") };
    const jmethodID method_setFocusPoint { ::djinni::jniGetMethodID(clazz.get(), "setFocusPoint", "(FF)V") };
    const jmethodID method_setFocusAutoRange { ::djinni::jniGetMethodID(clazz.get(), "setFocusAutoRange", "(Ldyno/fun/gearsbox/CameraFocusRange;)V") };
    const jmethodID method_getFocusAutoRange { ::djinni::jniGetMethodID(clazz.get(), "getFocusAutoRange", "()Ldyno/fun/gearsbox/CameraFocusRange;") };
    const jmethodID method_setZoom { ::djinni::jniGetMethodID(clazz.get(), "setZoom", "(F)V") };
    const jmethodID method_getZoom { ::djinni::jniGetMethodID(clazz.get(), "getZoom", "()F") };
    const jmethodID method_getZoomMax { ::djinni::jniGetMethodID(clazz.get(), "getZoomMax", "()F") };
    const jmethodID method_getZoomMin { ::djinni::jniGetMethodID(clazz.get(), "getZoomMin", "()F") };
    const jmethodID method_asnyOneFrame { ::djinni::jniGetMethodID(clazz.get(), "asnyOneFrame", "()V") };
    const jmethodID method_asnyOnePicture { ::djinni::jniGetMethodID(clazz.get(), "asnyOnePicture", "()V") };
    const jmethodID method_setCaptureHandler { ::djinni::jniGetMethodID(clazz.get(), "setCaptureHandler", "(Ldyno/fun/gearsbox/CameraCaptureHandler;)V") };
    const jmethodID method_setCaptureMode { ::djinni::jniGetMethodID(clazz.get(), "setCaptureMode", "(Ldyno/fun/gearsbox/CameraCaptureMode;)V") };
    const jmethodID method_getCaptureMode { ::djinni::jniGetMethodID(clazz.get(), "getCaptureMode", "()Ldyno/fun/gearsbox/CameraCaptureMode;") };
    const jmethodID method_setImmediaPause { ::djinni::jniGetMethodID(clazz.get(), "setImmediaPause", "(Z)V") };
    const jmethodID method_getDebugInfo { ::djinni::jniGetMethodID(clazz.get(), "getDebugInfo", "()Ljava/lang/String;") };
};

}  // namespace djinni_generated
