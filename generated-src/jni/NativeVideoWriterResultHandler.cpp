// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from camera.djinni

#include "NativeVideoWriterResultHandler.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeVideoWriterResultHandler::NativeVideoWriterResultHandler() : ::djinni::JniInterface<::gearsbox::VideoWriterResultHandler, NativeVideoWriterResultHandler>("dyno/fun/gearsbox/VideoWriterResultHandler$CppProxy") {}

NativeVideoWriterResultHandler::~NativeVideoWriterResultHandler() = default;

NativeVideoWriterResultHandler::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeVideoWriterResultHandler::JavaProxy::~JavaProxy() = default;

void NativeVideoWriterResultHandler::JavaProxy::onComplete(bool c_success, const std::string & c_path) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeVideoWriterResultHandler>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onComplete,
                           ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c_success)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_path)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeVideoWriterResultHandler::JavaProxy::beforeForceStop() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeVideoWriterResultHandler>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_beforeForceStop);
    ::djinni::jniExceptionCheck(jniEnv);
}

CJNIEXPORT void JNICALL Java_dyno_fun_gearsbox_VideoWriterResultHandler_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::gearsbox::VideoWriterResultHandler>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_dyno_fun_gearsbox_VideoWriterResultHandler_00024CppProxy_native_1onComplete(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jboolean j_success, jstring j_path)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::VideoWriterResultHandler>(nativeRef);
        ref->onComplete(::djinni::Bool::toCpp(jniEnv, j_success),
                        ::djinni::String::toCpp(jniEnv, j_path));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_dyno_fun_gearsbox_VideoWriterResultHandler_00024CppProxy_native_1beforeForceStop(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::gearsbox::VideoWriterResultHandler>(nativeRef);
        ref->beforeForceStop();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
