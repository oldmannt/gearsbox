// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from camera.djinni

package dyno.fun.gearsbox;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class VideoInfoGen {
    public abstract String getName();

    public abstract String getPath();

    public abstract int getFPS();

    public abstract int getWidth();

    public abstract int getHeight();

    public abstract long getFrameAmount();

    /**by second */
    public abstract long getDuration();

    public abstract VideoFrameGen getVideoFrame();

    /** create at fist time, return after second time */
    public static native VideoInfoGen getVideoInfo(String path, int outWidth, int outHeight);

    private static final class CppProxy extends VideoInfoGen
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public String getName()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getName(this.nativeRef);
        }
        private native String native_getName(long _nativeRef);

        @Override
        public String getPath()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getPath(this.nativeRef);
        }
        private native String native_getPath(long _nativeRef);

        @Override
        public int getFPS()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getFPS(this.nativeRef);
        }
        private native int native_getFPS(long _nativeRef);

        @Override
        public int getWidth()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getWidth(this.nativeRef);
        }
        private native int native_getWidth(long _nativeRef);

        @Override
        public int getHeight()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getHeight(this.nativeRef);
        }
        private native int native_getHeight(long _nativeRef);

        @Override
        public long getFrameAmount()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getFrameAmount(this.nativeRef);
        }
        private native long native_getFrameAmount(long _nativeRef);

        @Override
        public long getDuration()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getDuration(this.nativeRef);
        }
        private native long native_getDuration(long _nativeRef);

        @Override
        public VideoFrameGen getVideoFrame()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getVideoFrame(this.nativeRef);
        }
        private native VideoFrameGen native_getVideoFrame(long _nativeRef);
    }
}
