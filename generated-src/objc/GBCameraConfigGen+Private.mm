// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from camera.djinni

#import "GBCameraConfigGen+Private.h"
#import "GBCameraConfigGen.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "GBCameraConfigGen+Private.h"
#import "GBConfigGen+Private.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface GBCameraConfigGen ()

- (id)initWithCpp:(const std::shared_ptr<::gearsbox::CameraConfigGen>&)cppRef;

@end

@implementation GBCameraConfigGen {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::gearsbox::CameraConfigGen>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::gearsbox::CameraConfigGen>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable GBCameraConfigGen *)instance {
    try {
        auto r = ::gearsbox::CameraConfigGen::instance();
        return ::djinni_generated::CameraConfigGen::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)initialize:(nullable GBConfigGen *)cfg {
    try {
        auto r = _cppRefHandle.get()->initialize(::djinni_generated::ConfigGen::toCpp(cfg));
        return ::djinni::Bool::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (GBCameraFlash)getFlashMode {
    try {
        auto r = _cppRefHandle.get()->getFlashMode();
        return ::djinni::Enum<::gearsbox::CameraFlash, GBCameraFlash>::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (GBCameraQuality)getQuatityLevel {
    try {
        auto r = _cppRefHandle.get()->getQuatityLevel();
        return ::djinni::Enum<::gearsbox::CameraQuality, GBCameraQuality>::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setFlashMode:(GBCameraFlash)mode {
    try {
        _cppRefHandle.get()->setFlashMode(::djinni::Enum<::gearsbox::CameraFlash, GBCameraFlash>::toCpp(mode));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setQuatityLevel:(GBCameraQuality)quality {
    try {
        _cppRefHandle.get()->setQuatityLevel(::djinni::Enum<::gearsbox::CameraQuality, GBCameraQuality>::toCpp(quality));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}


namespace djinni_generated {

auto CameraConfigGen::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto CameraConfigGen::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<GBCameraConfigGen>(cpp);
}

}  // namespace djinni_generated

@end
