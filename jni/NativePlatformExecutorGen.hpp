// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from gearsbox.djinni

#pragma once

#include "djinni_support.hpp"
#include "platform_executor_gen.hpp"

namespace djinni_generated {

class NativePlatformExecutorGen final : ::djinni::JniInterface<::gearsbox::PlatformExecutorGen, NativePlatformExecutorGen> {
public:
    using CppType = std::shared_ptr<::gearsbox::PlatformExecutorGen>;
    using CppOptType = std::shared_ptr<::gearsbox::PlatformExecutorGen>;
    using JniType = jobject;

    using Boxed = NativePlatformExecutorGen;

    ~NativePlatformExecutorGen();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativePlatformExecutorGen>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativePlatformExecutorGen>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativePlatformExecutorGen();
    friend ::djinni::JniClass<NativePlatformExecutorGen>;
    friend ::djinni::JniInterface<::gearsbox::PlatformExecutorGen, NativePlatformExecutorGen>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::gearsbox::PlatformExecutorGen
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void endEniting(bool force) override;

    private:
        friend ::djinni::JniInterface<::gearsbox::PlatformExecutorGen, ::djinni_generated::NativePlatformExecutorGen>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("dyno/fun/gearsbox/PlatformExecutorGen") };
    const jmethodID method_endEniting { ::djinni::jniGetMethodID(clazz.get(), "endEniting", "(Z)V") };
};

}  // namespace djinni_generated
