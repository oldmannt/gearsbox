// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from gearsbox.djinni

#pragma once

#include "device_gen.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeDeviceGen final : ::djinni::JniInterface<::gearsbox::DeviceGen, NativeDeviceGen> {
public:
    using CppType = std::shared_ptr<::gearsbox::DeviceGen>;
    using CppOptType = std::shared_ptr<::gearsbox::DeviceGen>;
    using JniType = jobject;

    using Boxed = NativeDeviceGen;

    ~NativeDeviceGen();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeDeviceGen>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeDeviceGen>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeDeviceGen();
    friend ::djinni::JniClass<NativeDeviceGen>;
    friend ::djinni::JniInterface<::gearsbox::DeviceGen, NativeDeviceGen>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::gearsbox::DeviceGen
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        ::gearsbox::DeviceOrientation getOrientation() override;
        std::string getID() override;

    private:
        friend ::djinni::JniInterface<::gearsbox::DeviceGen, ::djinni_generated::NativeDeviceGen>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("dyno/fun/gearsbox/DeviceGen") };
    const jmethodID method_getOrientation { ::djinni::jniGetMethodID(clazz.get(), "getOrientation", "()Ldyno/fun/gearsbox/DeviceOrientation;") };
    const jmethodID method_getID { ::djinni::jniGetMethodID(clazz.get(), "getID", "()Ljava/lang/String;") };
};

}  // namespace djinni_generated
