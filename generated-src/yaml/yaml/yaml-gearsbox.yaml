# AUTOGENERATED FILE - DO NOT MODIFY!
# This file generated by Djinni from gearsbox.djinni, ui.djinni
---
name: gb_async_loop_gen
typedef: 'interface +c'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::AsyncLoopGen'
  header: '"async_loop_gen.hpp"'
  byValue: false
objc:
  typename: 'GBAsyncLoopGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBAsyncLoopGen'
  header: '"GBAsyncLoopGen.h"'
objcpp:
  translator: '::djinni_generated::AsyncLoopGen'
  header: '"GBAsyncLoopGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.AsyncLoopGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.AsyncLoopGen'
jni:
  translator: '::djinni_generated::NativeAsyncLoopGen'
  header: '"NativeAsyncLoopGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/AsyncLoopGen;'
---
name: gb_callback_http_gen
typedef: 'interface +o +j'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::CallbackHttpGen'
  header: '"callback_http_gen.hpp"'
  byValue: false
objc:
  typename: 'GBCallbackHttpGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBCallbackHttpGen'
  header: '"GBCallbackHttpGen.h"'
objcpp:
  translator: '::djinni_generated::CallbackHttpGen'
  header: '"GBCallbackHttpGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.CallbackHttpGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.CallbackHttpGen'
jni:
  translator: '::djinni_generated::NativeCallbackHttpGen'
  header: '"NativeCallbackHttpGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/CallbackHttpGen;'
---
name: gb_constraint_type
typedef: 'enum'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::ConstraintType'
  header: '"constraint_type.hpp"'
  byValue: true
objc:
  typename: 'GBConstraintType'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"GBConstraintType.h"'
objcpp:
  translator: '::djinni::Enum<::gearsbox::ConstraintType, GBConstraintType>'
  header: '"DJIMarshal+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.ConstraintType'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.ConstraintType'
jni:
  translator: '::djinni_generated::NativeConstraintType'
  header: '"NativeConstraintType.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/ConstraintType;'
---
name: gb_http_request_gen
typedef: 'interface +c'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::HttpRequestGen'
  header: '"http_request_gen.hpp"'
  byValue: false
objc:
  typename: 'GBHttpRequestGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBHttpRequestGen'
  header: '"GBHttpRequestGen.h"'
objcpp:
  translator: '::djinni_generated::HttpRequestGen'
  header: '"GBHttpRequestGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.HttpRequestGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.HttpRequestGen'
jni:
  translator: '::djinni_generated::NativeHttpRequestGen'
  header: '"NativeHttpRequestGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/HttpRequestGen;'
---
name: gb_log_gen
typedef: 'interface +c'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::LogGen'
  header: '"log_gen.hpp"'
  byValue: false
objc:
  typename: 'GBLogGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBLogGen'
  header: '"GBLogGen.h"'
objcpp:
  translator: '::djinni_generated::LogGen'
  header: '"GBLogGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.LogGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.LogGen'
jni:
  translator: '::djinni_generated::NativeLogGen'
  header: '"NativeLogGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/LogGen;'
---
name: gb_ui_injecter_gen
typedef: 'interface +c'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::UiInjecterGen'
  header: '"ui_injecter_gen.hpp"'
  byValue: false
objc:
  typename: 'GBUiInjecterGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBUiInjecterGen'
  header: '"GBUiInjecterGen.h"'
objcpp:
  translator: '::djinni_generated::UiInjecterGen'
  header: '"GBUiInjecterGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.UiInjecterGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.UiInjecterGen'
jni:
  translator: '::djinni_generated::NativeUiInjecterGen'
  header: '"NativeUiInjecterGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/UiInjecterGen;'
---
name: gb_view_constraint
typedef: 'record'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::ViewConstraint'
  header: '"view_constraint.hpp"'
  byValue: false
objc:
  typename: 'GBViewConstraint'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBViewConstraint'
  header: '"GBViewConstraint.h"'
objcpp:
  translator: '::djinni_generated::ViewConstraint'
  header: '"GBViewConstraint+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.ViewConstraint'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.ViewConstraint'
jni:
  translator: '::djinni_generated::NativeViewConstraint'
  header: '"NativeViewConstraint.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/ViewConstraint;'
---
name: gb_view_event
typedef: 'enum'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::ViewEvent'
  header: '"view_event.hpp"'
  byValue: true
objc:
  typename: 'GBViewEvent'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"GBViewEvent.h"'
objcpp:
  translator: '::djinni::Enum<::gearsbox::ViewEvent, GBViewEvent>'
  header: '"DJIMarshal+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.ViewEvent'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.ViewEvent'
jni:
  translator: '::djinni_generated::NativeViewEvent'
  header: '"NativeViewEvent.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/ViewEvent;'
---
name: gb_view_event_handler
typedef: 'interface +c'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::ViewEventHandler'
  header: '"view_event_handler.hpp"'
  byValue: false
objc:
  typename: 'GBViewEventHandler'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBViewEventHandler'
  header: '"GBViewEventHandler.h"'
objcpp:
  translator: '::djinni_generated::ViewEventHandler'
  header: '"GBViewEventHandler+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.ViewEventHandler'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.ViewEventHandler'
jni:
  translator: '::djinni_generated::NativeViewEventHandler'
  header: '"NativeViewEventHandler.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/ViewEventHandler;'
---
name: gb_view_event_param
typedef: 'record'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::ViewEventParam'
  header: '"view_event_param.hpp"'
  byValue: false
objc:
  typename: 'GBViewEventParam'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBViewEventParam'
  header: '"GBViewEventParam.h"'
objcpp:
  translator: '::djinni_generated::ViewEventParam'
  header: '"GBViewEventParam+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.ViewEventParam'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.ViewEventParam'
jni:
  translator: '::djinni_generated::NativeViewEventParam'
  header: '"NativeViewEventParam.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/ViewEventParam;'
---
name: gb_view_factory_gen
typedef: 'interface +o +j'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::ViewFactoryGen'
  header: '"view_factory_gen.hpp"'
  byValue: false
objc:
  typename: 'GBViewFactoryGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBViewFactoryGen'
  header: '"GBViewFactoryGen.h"'
objcpp:
  translator: '::djinni_generated::ViewFactoryGen'
  header: '"GBViewFactoryGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.ViewFactoryGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.ViewFactoryGen'
jni:
  translator: '::djinni_generated::NativeViewFactoryGen'
  header: '"NativeViewFactoryGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/ViewFactoryGen;'
---
name: gb_view_frame
typedef: 'record'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::ViewFrame'
  header: '"view_frame.hpp"'
  byValue: false
objc:
  typename: 'GBViewFrame'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBViewFrame'
  header: '"GBViewFrame.h"'
objcpp:
  translator: '::djinni_generated::ViewFrame'
  header: '"GBViewFrame+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.ViewFrame'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.ViewFrame'
jni:
  translator: '::djinni_generated::NativeViewFrame'
  header: '"NativeViewFrame.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/ViewFrame;'
---
name: gb_view_gen
typedef: 'interface +o +j'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::ViewGen'
  header: '"view_gen.hpp"'
  byValue: false
objc:
  typename: 'GBViewGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'GBViewGen'
  header: '"GBViewGen.h"'
objcpp:
  translator: '::djinni_generated::ViewGen'
  header: '"GBViewGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.ViewGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.ViewGen'
jni:
  translator: '::djinni_generated::NativeViewGen'
  header: '"NativeViewGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/ViewGen;'
---
name: gb_view_type
typedef: 'enum'
params: []
prefix: gb_
cpp:
  typename: '::gearsbox::ViewType'
  header: '"view_type.hpp"'
  byValue: true
objc:
  typename: 'GBViewType'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"GBViewType.h"'
objcpp:
  translator: '::djinni::Enum<::gearsbox::ViewType, GBViewType>'
  header: '"DJIMarshal+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.gearsbox.ViewType'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.gearsbox.ViewType'
jni:
  translator: '::djinni_generated::NativeViewType'
  header: '"NativeViewType.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/gearsbox/ViewType;'
